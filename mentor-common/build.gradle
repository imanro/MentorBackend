buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.0.5.RELEASE")
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.0'
        classpath('net.ltgt.gradle:gradle-apt-plugin:0.21')
    }
}

// The Application plugin allows to resolve dependencies for plain application, just as io.spring.dependency-management does for Spring, I think.
// It requires to mainClassName was defined in build.gradle

plugins {
    id 'java'
    id 'idea'
    id 'application'
    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
    id 'net.ltgt.apt' version '0.21'
    id 'net.ltgt.apt-idea' version '0.21'
}

version '0.1'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

// The next two lines fixes unresolved dependencies for other subprojects
// https://stackoverflow.com/questions/47598848/spring-boot-multi-module-project-with-gradle-doesnt-build
bootJar {
    enabled = false
}

jar {
    enabled = true
}


dependencies {
    // compile("org.springframework.data:spring-data-commons:2.1.6.RELEASE")
    compile("org.springframework.data:spring-data-commons")
//    compile("org.springframework.boot:spring-boot-starter-data-mongodb")
//    compile("org.springframework.data:spring-data-mongodb")
//    compile("org.springframework.boot:spring-boot-starter-data-mongodb")
    // compile('org.springframework.boot')
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.data:spring-data-mongodb:2.1.6.RELEASE")
    compile("org.mongodb:mongo-java-driver:3.10.1")


    testCompile('org.junit.jupiter:junit-jupiter-api:5.3.2')
    testCompile('org.hamcrest:hamcrest-library:1.3')
//    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile('org.springframework:spring-test:5.1.6.RELEASE')
    testCompile('org.springframework.boot:spring-boot-test-autoconfigure:2.1.4.RELEASE')

    // testCompile('org.slf4j:slf4j-simple:jar')
    // testCompile('org.slf4j:slf4j-log4j12')

    testRuntime('org.junit.jupiter:junit-jupiter-engine:5.3.2')

    annotationProcessor (
            "org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.2.Final",
            "javax.annotation:javax.annotation-api:1.3.2",
    )
}


mainClassName = 'mentor.MentorApplication'

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
        showStandardStreams = true
    }
}
