buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.0.5.RELEASE")
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.0'
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
// apply plugin: 'application'

bootJar {
    baseName = 'gs-rest-service'
    version =  '0.1.0'
}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.jsoup:jsoup:1.11.3")
    compile("commons-codec:commons-codec:1.5")
    compile("javax.mail:mail:1.4.1")
    compile("org.apache.commons:commons-lang3:3.0")
    compile("org.mongodb:mongo-java-driver:3.10.1")
    testCompile('org.junit.jupiter:junit-jupiter-api:5.4.0')

    testCompile('org.hamcrest:hamcrest-library:1.3')
    testRuntime('org.junit.jupiter:junit-jupiter-engine:5.4.0')
}

// mainClassName = 'mentor.App'

test {
    useJUnitPlatform()
	testLogging {
	events "passed", "skipped", "failed"
	showStandardStreams = true
    }
}

task(runSimple, dependsOn: 'classes', type: JavaExec) {
    main = 'mentor.App'
    classpath = sourceSets.main.runtimeClasspath
//    args 'mrhaki'
//    systemProperty 'simple.message', 'Hello '
}

/*
task wrapper(type: Wrapper) {
    gradleVersion = '2.0'
}
*/