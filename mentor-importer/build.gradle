buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.1.4.RELEASE")
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.0'
    }
}

// The Application plugin allows to resolve dependencies for plain application, just as io.spring.dependency-management does for Spring, I think.
// It requires to mainClassName was defined in build.gradle

// Version is required for spring plugins!!!
plugins {
    id 'java'
    id 'application'
    id 'org.springframework.boot' version "2.1.4.RELEASE"
    id "io.spring.dependency-management" version "1.0.7.RELEASE"
}

version '0.1'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

bootJar {
/*    enabled = false */
}

jar {
/*     enabled = true */
}

dependencies {
    //
    compile("org.springframework.data:spring-data-commons")
    compile("org.springframework.boot:spring-boot-starter-web")

    compile project(":mentor-common")

    // compile group: "org.json", name: "json", version: "20180813"
    // compile("org.json:json:20180813")
    // compile("org.mongodb:mongo-java-driver:3.10.1")

    compile("org.jsoup:jsoup:1.11.3")
    compile("javax.mail:mail:1.4.1")
    compile("org.apache.commons:commons-lang3:3.0")
    compile 'com.fasterxml.jackson.core:jackson-core:2.9.8'

    testCompile('org.junit.jupiter:junit-jupiter-api:5.3.2')
    testCompile('org.hamcrest:hamcrest-library:1.3')
    testRuntime('org.junit.jupiter:junit-jupiter-engine:5.3.2')
}

// mainClassName = 'mentor.ImporterApplication'

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
        showStandardStreams = true
    }
}
